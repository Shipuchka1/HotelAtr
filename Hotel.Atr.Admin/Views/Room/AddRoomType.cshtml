@model HotelAtr.DAL.Model.RoomType

@{
    ViewBag.Title = "AddRoomType";
}

<h2>AddRoomType</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RoomType</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Cost, "Cost", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @type = "money" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PathImg, "PathImg", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PathImg, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PathImg, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Free WiFi</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model =>
                    Model.IsFreeWiFi,
                    new SelectList(new bool[] { true, false }), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Private Balcony</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model =>
                    Model.isPrivateBalcony,
                    new SelectList(new bool[] { true, false }), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Full AC</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model =>
               Model.isFullAC,
               new SelectList(new bool[] { true, false }), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">TV</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model =>
          Model.HasTV,
          new SelectList(new bool[] { true, false }), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Beach View</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model =>
     Model.isBeachView,
     new SelectList(new bool[] { true, false }), new { @class = "form-control" })
        </div>
    </div>

</div>

    if (Model == null)
    {
        <button type="submit" value="Add" name="action">Add</button>
    }
    else
    {
        <button type="submit" value="Save" name="action">Save</button>
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
